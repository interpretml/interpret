const myModule = require('../..');

const utils = require('./utils');

const unitTestAssert = utils.unitTestAssert;
const assert1dCloseTo = utils.assert1dCloseTo;

const name = 'inplaceIsotonicY';
let x = null;
let y = null;
let w = null;
let expected = null;

console.log(`\n--- Start testing ${name} ---`);


y = [64., 63., 45., 62., 56., 57., 77., 81., 89., 90.];
w = [1.95425644, 0.60684967, 1.2580323, 1.53842068, 1.95195491,
  0.61440569, 1.25177586, 1.83410405, 0.90062608, 1.95634757];
expected = [57.58246264, 57.58246264, 57.58246264, 58.39840544, 58.39840544,
  58.39840544, 77., 81., 89., 90.];

myModule.__inplaceIsotonicY(y, w);
unitTestAssert(
  'inplaceIsotonicY [short int array]',
  () => myModule.__inplaceIsotonicY(y, w),
  expected,
  (e, r) => assert1dCloseTo(e, r, 1e-6)
);

y = [24.74023148, 60.64946544, 61.36665967, 51.8410705,
  28.95372113, 29.45715725, 38.77944516, 43.64344493,
  30.18175729, 69.10317001, 47.93417063, 69.0877155,
  60.43938746, 45.28645158, 54.14652839, 38.39389292,
  59.61922353, 51.08662661, 57.75899795, 63.05156299,
  55.03936611, 77.17854243, 69.70446808, 76.6149397,
  72.77524086, 89.5415646, 69.23821064, 76.54665521,
  84.02779396, 70.44365521, 108.01259174, 97.36118522,
  76.98661392, 87.18300599, 109.27509116, 111.2844057,
  92.43147907, 120.49800077, 99.60455453, 126.92429237];

w = [0.9535671, 1.53118784, 1.17266009, 0.84762725, 0.74202555,
  1.14442962, 1.63017888, 1.79719303, 1.67292277, 1.01916282,
  1.78014366, 1.78417706, 0.93676918, 1.3368897, 1.49980682,
  0.53306526, 1.36114583, 1.86328863, 1.75694308, 1.57142553,
  1.09329854, 1.6914202, 1.59134693, 1.84961774, 0.87618466,
  1.74104693, 0.55205224, 1.83103119, 0.66020191, 1.731672,
  1.51366878, 1.35123154, 0.91433583, 1.37047422, 0.93937625,
  0.84414612, 0.67012779, 1.56440168, 1.81810018, 1.93269853];

expected = [24.74023148, 43.28155645, 43.28155645, 43.28155645,
  43.28155645, 43.28155645, 43.28155645, 43.28155645,
  43.28155645, 55.64131424, 55.64131424, 55.65570633,
  55.65570633, 55.65570633, 55.65570633, 55.65570633,
  55.65570633, 55.65570633, 57.75899795, 59.7642721,
  59.7642721, 73.55542668, 73.55542668, 75.38070305,
  75.38070305, 78.53572262, 78.53572262, 78.53572262,
  78.53572262, 78.53572262, 94.16577612, 94.16577612,
  94.16577612, 94.16577612, 105.36613236, 105.36613236,
  105.36613236, 109.26773987, 109.26773987, 126.92429237];

myModule.__inplaceIsotonicY(y, w);
unitTestAssert(
  'inplaceIsotonicY [long float array]',
  () => myModule.__inplaceIsotonicY(y, w),
  expected,
  (e, r) => assert1dCloseTo(e, r, 1e-6)
);

y = [-7.62660243, -16.42348911, 4.1760305, -8.85859094,
  5.08079624, 9.27008069, 1.2399096, -6.70974057,
  17.64856491, -8.67449473];

w = [0.62716051, 0.86828878, 0.60852184, 1.0586297, 1.47795906,
  0.62760582, 1.26310475, 1.50016808, 1.89524023, 0.83451346];

expected = [-12.73425672, -12.73425672, -4.100864, -4.100864,
  0.99152256, 0.99152256, 0.99152256, 0.99152256,
  9.60133791, 9.60133791];

myModule.__inplaceIsotonicY(y, w);
unitTestAssert(
  'inplaceIsotonicY [random float array]',
  () => myModule.__inplaceIsotonicY(y, w),
  expected,
  (e, r) => assert1dCloseTo(e, r, 1e-6)
);
