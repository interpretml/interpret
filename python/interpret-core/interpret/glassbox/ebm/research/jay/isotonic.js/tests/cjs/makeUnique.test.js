const myModule = require('../..');

const utils = require('./utils');

const unitTestAssert = utils.unitTestAssert;
const assert2dCloseTo = utils.assert2dCloseTo;

const name = 'makeUnique';
let x = null;
let y = null;
let w = null;
let expected = null;

console.log(`\n--- Start testing ${name} ---`);

x = [1., 2., 2., 3.];
y = [3., 2., 59., 1.];
w = [0.1, 0.2, 0.3, 0.4];

expected = [
  [1., 2., 3.],
  [3., 36.2, 1.],
  [0.1, 0.5, 0.4]
];

unitTestAssert(
  'makeUnique [basic]',
  () => myModule.__makeUnique(x, y, w),
  expected,
  (e, r) => assert2dCloseTo(e, r, 1e-10)
);

x = [-46.00710675, -46.00710675, -11.81897283, -11.81897283,
  -7.65518618, -7.65518618, 1.53379557, 1.53379557,
  2.3372937, 2.3372937, 7.36820703, 7.36820703,
  8.86145304, 8.86145304, 21.12512294, 21.12512294,
  31.94004855, 31.94004855, 47.02323728, 47.02323728];
y = [11.57247861, 15.99861941, 15.43820001, -18.08848038,
  6.73203488, 1.99460253, 16.01115915, -6.37586903,
  -16.16694427, -11.15000928, 10.28399938, -0.74221761,
  14.90160975, -2.85192377, -15.25613135, -15.56847298,
  -19.87013801, 7.04559903, -10.81411004, -7.97597657];
w = [1.92284745, 2.01022784, 1.53252245, 1.36628219, 1.72930782,
  1.26276047, 1.42916899, 2.18340953, 0.71177481, 1.10390141,
  2.16139151, 1.73263714, 1.64945005, 2.98079495, 1.53422312,
  2.42173698, 1.46037611, 1.41543014, 0.97413316, 2.97378138];

expected = [
  [-46.00710675, -11.81897283, -7.65518618, 1.53379557,
    2.3372937, 7.36820703, 8.86145304, 21.12512294,
    31.94004855, 47.02323728],
  [13.83471638, -0.36379843, 4.73266798, 2.48064336,
    -13.11672994, 5.37791501, 3.472486, -15.44733886,
    -6.62260252, -8.6762754],
  [3.93307529, 2.89880464, 2.99206829, 3.61257852, 1.81567621,
    3.89402865, 4.63024499, 3.9559601, 2.87580625, 3.94791454]
];

unitTestAssert(
  'makeUnique [longer arrays]',
  () => myModule.__makeUnique(x, y, w),
  expected,
  (e, r) => assert2dCloseTo(e, r, 1e-6)
);

x = [3.661, 3.661, 7.076, 7.076, 7.54, 7.54, 8.745, 8.745,
  33.923, 33.923, 34.753, 34.753, 39.036, 39.036, 39.993, 39.993,
  43.937, 43.937, 54.061, 54.061, 60.549, 60.549, 71.386, 71.386,
  75.981, 75.981, 82.341, 82.341, 82.726, 82.726, 85.068, 85.068,
  89.994, 89.994, 92.022, 92.022, 95.293, 95.293, 97.249, 97.249];

y = [84.065, 81.43, 103.409, 87.398, 84.942, 82.554, 93.982,
  94.288, 62.1, 75.601, 70.19, 62.343, 69.123, 75.561,
  57.265, 76.424, 45.991, 64.786, 59.802, 65.071, 42.818,
  34.862, 39.192, 25.374, 48.822, 32.867, 14.983, 43.226,
  40.129, 26.431, 29.198, 30.979, 15.029, 35.078, 31.002,
  10.916, 4.56, 33.736, 29.22, 31.606];

w = [1.894, 1.08, 1.189, 0.644, 1.315, 1.136, 1.24, 1.459, 0.53,
  1.824, 1.652, 1.527, 1.445, 1.246, 1.811, 0.736, 1.002, 0.889,
  1.932, 0.536, 0.687, 1.647, 1.282, 1.949, 0.694, 0.531, 1.128,
  1.387, 0.835, 1.353, 1.112, 1.266, 1.833, 1.096, 1.975, 1.063,
  0.503, 1.803, 1.61, 1.3];

expected = [
  [3.661, 7.076, 7.54, 8.745, 33.923, 34.753, 39.036, 39.993,
    43.937, 54.061, 60.549, 71.386, 75.981, 82.341, 82.726, 85.068,
    89.994, 92.022, 95.293, 97.249],
  [83.10810693, 97.78374959, 83.83519951, 94.1474146, 72.56126763,
    66.42077414, 72.10395429, 62.80132666, 54.82693601, 60.94632091,
    37.20380463, 30.85672238, 41.90599592, 30.55876183, 31.65852742,
    30.14616905, 22.53111813, 23.97388348, 27.37193755, 30.28591065],
  [2.974, 1.833, 2.451, 2.699, 2.354, 3.179, 2.691, 2.547, 1.891,
    2.468, 2.334, 3.231, 1.225, 2.515, 2.188, 2.378, 2.929, 3.038,
    2.306, 2.91]
];

unitTestAssert(
  'makeUnique [decreasing longer arrays]',
  () => myModule.__makeUnique(x, y, w),
  expected,
  (e, r) => assert2dCloseTo(e, r, 1e-6)
);
